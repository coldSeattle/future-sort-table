{"version":3,"sources":["helpers/helpers.js","components/Home/Home.js","components/FIlteration/index.js","components/Buttons/DefButton.js","components/Pagination/Pagination.js","components/FormAddNewCell/index.js","components/Table/Table.js","components/main/BigDCOM.js","components/main/SmallDCOM.js","App.js","index.js"],"names":["BIG_DATA_API","getSmallData","a","axios","get","response","getBigData","handleSort","data","asc","slice","sort","b","id","desc","console","log","ascending","descending","Home","className","to","FilterForm","onChangeHandler","value","onFilterHandler","onChange","event","onClick","DefButton","classNames","setCurrentPage","disableButton","content","disabled","PaginationTable","per_page","total_data","handleClick","current_page","pageNumbers","i","Math","ceil","push","Number","length","FormAddNewCell","setShowAddForm","showAddForm","newCellData","handleAddNewCell","name","firstName","lastName","email","phone","Table","onSortHandle","isLoading","React","useState","moreInfo","setMoreInfo","setNewCellData","isEnabled","target","width","cellPadding","map","item","Fragment","result","filter","handleMoreInfoByTableData","style","display","textAlign","description","defaultValue","address","streetAddress","city","state","zip","BigDCOM","props","number","setState","currentPage","formatData","filteredData","totalDataLength","perPage","newCell","_isMounted","bind","AddNewCell","this","error","alert","indexOfLastPost","indexOfFirstPage","currentPosts","val","toLowerCase","filtered","String","includes","newItem","res","unshift","e","Component","SmallDCom","handleFiltered","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00009981.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const SMALL_DATA_API =\r\n  \"https://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}/\";\r\nexport const BIG_DATA_API =\r\n  \"&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\";\r\n\r\n// get small data packages\r\nexport async function getSmallData() {\r\n  const response = await axios.get(\r\n    \"https://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}/\"\r\n  );\r\n  return response;\r\n}\r\n\r\nexport async function getBigData() {\r\n  const response = await axios.get(\r\n    `https://www.filltext.com/?rows=1000${BIG_DATA_API}/`\r\n  );\r\n  return response;\r\n}\r\n\r\nexport function handleSortIcon(ascending) {\r\n  if (ascending) return <b>&#8595;</b>;\r\n  return <b>&#8593;</b>;\r\n}\r\n\r\nexport function handleSort(data) {\r\n  const asc = data.slice().sort((a, b) => a.id - b.id); // For ascending sort\r\n  const desc = data.slice().sort((a, b) => b.id - a.id); // For descending sort\r\n  console.log(\"asc\", asc);\r\n  console.log(\"desc\", desc);\r\n  return { ascending: asc, descending: desc };\r\n}\r\n\r\nexport function handleFiltered(item, value = \"\") {\r\n  const val = value && value.toLowerCase();\r\n  if (!value || !item) return true;\r\n  if (\r\n    String(item.id).includes(val) ||\r\n    item.firstName.toLowerCase().includes(val) ||\r\n    item.lastName.toLowerCase().includes(val) ||\r\n    item.email.toLowerCase().includes(val) ||\r\n    item.phone.toLowerCase().includes(val)\r\n  )\r\n    return true;\r\n\r\n  return false;\r\n}\r\n","import React from \"react\";\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\nimport { getSmallData } from \"../../helpers/helpers\";\nimport \"./index.scss\";\n\nconst Home = () => (\n  <div className=\"home\">\n    <h1 className=\"home__title title\">Home</h1>\n    <div className=\"home__link-container\">\n      <Link className=\"home__link link\" to=\"/small\">\n        Small Dates\n      </Link>\n      <Link className=\"home__link link\" to=\"/big\">\n        Large Dates\n      </Link>\n    </div>\n  </div>\n);\n\nexport { Home };\n","import React from \"react\";\nimport \"./index.scss\";\n\nconst FilterForm = ({ onChangeHandler, value, onFilterHandler }) => (\n  <div className=\"filter-form\">\n    <input\n      onChange={(event) => onChangeHandler(event)}\n      value={value}\n      className=\"filter-form__input input\"\n    />\n    <button onClick={() => onFilterHandler()} className=\"filter-form__btn btn\">\n      Search\n    </button>\n  </div>\n);\n\nexport { FilterForm };\n","import React from \"react\";\nimport \"./index.scss\";\n\nconst DefButton = ({ classNames, setCurrentPage, disableButton, content }) => (\n  <button\n    className={`${classNames} ${disableButton ? \"button--dis\" : \"\"}`}\n    onClick={() => setCurrentPage()}\n    disabled={disableButton}\n  >\n    {content}\n  </button>\n);\n\nexport { DefButton };\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { DefButton } from \"../Buttons/DefButton\";\nimport \"./index.scss\";\n\nconst PaginationTable = ({\n  per_page,\n  total_data,\n  handleClick,\n  current_page = 1,\n}) => {\n  const pageNumbers = [];\n  const perBtn = 10;\n\n  for (let i = 1; i <= Math.ceil(total_data / per_page); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <div className=\"pagination\">\n      <DefButton\n        classNames=\"btn\"\n        disableButton={current_page <= 1}\n        setCurrentPage={() => handleClick(Number(current_page - 1))}\n        content=\"Prev\"\n      />\n\n      {/* {pageNumbers.map(i => (\n        <DefButton\n          key={i}\n          setCurrentPage={() => handleClick(i)}\n          classNames={`btn ${current_page == i ? 'active' : ''}`}\n          content={i}\n        />\n      ))} */}\n\n      <DefButton\n        classNames=\"btn\"\n        disableButton={current_page >= pageNumbers.length}\n        setCurrentPage={() => handleClick(Number(current_page + 1))}\n        content=\"Next\"\n      />\n      <div className=\"pagination__info\">\n        <p>{`${current_page}/${pageNumbers.length}`}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PaginationTable;\n","import React from \"react\";\n\nimport \"./index.scss\";\n\nconst FormAddNewCell = ({\n  setShowAddForm,\n  showAddForm,\n  newCellData,\n  onChangeHandler,\n  handleAddNewCell,\n  disabled,\n}) => (\n  <div className=\"form_add_new_cell\">\n    <button className=\"btn btn--show-form\" onClick={() => setShowAddForm(true)}>\n      add new Cell\n    </button>\n    {showAddForm && (\n      <>\n        <table>\n          <thead>\n            <tr className=\"table__title\">\n              <th> id </th>\n              <th> firstName </th>\n              <th> lastName </th>\n              <th> email </th>\n              <th> phone </th>\n            </tr>\n          </thead>\n        </table>\n        <div>\n          <input\n            className=\"input\"\n            name=\"id\"\n            value={newCellData.id}\n            onChange={(event) => onChangeHandler(event)}\n          />\n          <input\n            className=\"input\"\n            name=\"firstName\"\n            value={newCellData.firstName}\n            onChange={(event) => onChangeHandler(event)}\n          />\n          <input\n            className=\"input\"\n            name=\"lastName\"\n            value={newCellData.lastName}\n            onChange={(event) => onChangeHandler(event)}\n          />\n          <input\n            className=\"input\"\n            name=\"email\"\n            value={newCellData.email}\n            onChange={(event) => onChangeHandler(event)}\n          />\n          <input\n            className=\"input\"\n            name=\"phone\"\n            value={newCellData.phone}\n            onChange={(event) => onChangeHandler(event)}\n          />\n        </div>\n        <button\n          className={`btn ${disabled ? \"disabled\" : \"\"}`}\n          disabled={disabled}\n          onClick={() => {\n            if (disabled) return;\n            handleAddNewCell(newCellData);\n          }}\n        >\n          Save\n        </button>\n      </>\n    )}\n  </div>\n);\n\nexport { FormAddNewCell };\n","import React from \"react\";\r\nimport { DefButton } from \"../Buttons/DefButton\";\r\nimport { FormAddNewCell } from \"../FormAddNewCell\";\r\nimport \"./index.scss\";\r\n\r\nconst Table = ({ onSortHandle, isLoading, data, handleAddNewCell }) => {\r\n  const [moreInfo, setMoreInfo] = React.useState(null);\r\n  const [showAddForm, setShowAddForm] = React.useState(false);\r\n  const [newCellData, setNewCellData] = React.useState({\r\n    id: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const isEnabled =\r\n    newCellData.id.length > 0 &&\r\n    newCellData.firstName.length > 0 &&\r\n    newCellData.lastName.length &&\r\n    newCellData.email.length &&\r\n    newCellData.phone.length;\r\n\r\n  const handleMoreInfoByTableData = (id) => {\r\n    const result = data.filter((item) => item.id == id);\r\n    data && setMoreInfo(result);\r\n  };\r\n\r\n  const onChangeHandler = (event) => {\r\n    setNewCellData({\r\n      ...newCellData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormAddNewCell\r\n        disabled={!isEnabled}\r\n        handleAddNewCell={handleAddNewCell}\r\n        newCellData={newCellData}\r\n        onChangeHandler={onChangeHandler}\r\n        setShowAddForm={setShowAddForm}\r\n        showAddForm={showAddForm}\r\n      />\r\n\r\n      <table className=\"bigcom__table\" width=\"100%\" cellPadding=\"5\">\r\n        <thead>\r\n          <tr onClick={() => onSortHandle()} className=\"table__title\">\r\n            <th> id </th>\r\n            <th> firstName </th>\r\n            <th> lastName </th>\r\n            <th> email </th>\r\n            <th> phone </th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {data && !isLoading ? (\r\n            data.map((item) => (\r\n              <React.Fragment key={item.id + item.firstName + item.lastName}>\r\n                <tr\r\n                  onClick={() => handleMoreInfoByTableData(item.id)}\r\n                  className=\"table__data\"\r\n                >\r\n                  <td>{item.id}</td>\r\n                  <td>{item.firstName}</td>\r\n                  <td>{item.lastName}</td>\r\n                  <td>{item.email}</td>\r\n                  <td>{item.phone}</td>\r\n                </tr>\r\n              </React.Fragment>\r\n            ))\r\n          ) : (\r\n            <td style={{ display: \"inline\", textAlign: \"center\" }}>\r\n              loading...\r\n            </td>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"more_info\">\r\n        {moreInfo &&\r\n          moreInfo.map((item) => (\r\n            <React.Fragment key={item.id + item.firstName + item.lastName}>\r\n              <p className=\"more_info__userName\">\r\n                Выбран пользователь{\" \"}\r\n                <b>{`${item.firstName} ${item.lastName}`}</b>\r\n              </p>\r\n              <p>Описание:</p>\r\n              {item.description && <textarea defaultValue={item.description} />}\r\n              {item.address &&\r\n                item.address.streetAddress && (\r\n                  <p>\r\n                    Адрес проживания: <b>{item.address.streetAddress}</b>{\" \"}\r\n                  </p>\r\n                ) &&\r\n                item.address.city && (\r\n                  <p>\r\n                    Город: <b>{item.address.city}</b>{\" \"}\r\n                  </p>\r\n                ) &&\r\n                item.address.state && (\r\n                  <p>\r\n                    Провинция/штат: <b>{item.address.state}</b>{\" \"}\r\n                  </p>\r\n                ) &&\r\n                item.address.zip && (\r\n                  <p>\r\n                    Индекс: <b>{item.address.zip}</b>{\" \"}\r\n                  </p>\r\n                )}\r\n            </React.Fragment>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Table };\r\n","import React, { Component } from \"react\";\r\nimport { getBigData } from \"../../helpers/helpers\";\r\nimport { FilterForm } from \"../FIlteration\";\r\nimport PaginationTable from \"../Pagination/Pagination\";\r\nimport { Table } from \"../Table/Table\";\r\nimport \"./index.scss\";\r\n\r\nclass BigDCOM extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n      value: \"\",\r\n      ascending: false,\r\n      filteredData: null,\r\n      totalDataLength: \"\",\r\n      currentPage: 1,\r\n      perPage: 50,\r\n      isLoading: false,\r\n      newCell: {},\r\n    };\r\n\r\n    this._isMounted = false;\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.onFilterHandler = this.onFilterHandler.bind(this);\r\n    this.onSortHandle = this.onSortHandle.bind(this);\r\n    this.AddNewCell = this.AddNewCell.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    const response = await getBigData();\r\n\r\n    try {\r\n      if (this._isMounted) {\r\n        this.setState(\r\n          () => ({\r\n            data: response.data,\r\n            filteredData: response.data,\r\n            isLoading: true,\r\n            totalDataLength: response.data.length,\r\n          }),\r\n          () => {\r\n            this.formatData();\r\n            this.setState({ isLoading: false });\r\n          }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      alert(\"someting went wrong, please refresh page! ERROR: \", error);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  handleClick = (number) => {\r\n    this.setState(\r\n      () => ({\r\n        isLoading: true,\r\n        currentPage: Number(number),\r\n      }),\r\n      () => {\r\n        this.formatData();\r\n        this.setState({ isLoading: false });\r\n      }\r\n    );\r\n  };\r\n\r\n  formatData() {\r\n    const indexOfLastPost = this.state.currentPage * this.state.perPage;\r\n    const indexOfFirstPage = indexOfLastPost - this.state.perPage;\r\n\r\n    const currentPosts = this.state.data.slice(\r\n      indexOfFirstPage,\r\n      indexOfLastPost\r\n    );\r\n\r\n    this.setState({ filteredData: currentPosts });\r\n\r\n    return {\r\n      indexOfFirstPage: indexOfFirstPage,\r\n      indexOfLastPost: indexOfLastPost,\r\n    };\r\n  }\r\n\r\n  onSortHandle() {\r\n    if (!this.state.ascending) {\r\n      this.formatData();\r\n      return this.setState((state, props) => ({\r\n        filteredData: state.data\r\n          .slice(\r\n            this.formatData().indexOfFirstPage,\r\n            this.formatData().indexOfLastPost\r\n          )\r\n          .sort((a, b) => a.id - b.id),\r\n        ascending: true,\r\n      }));\r\n    }\r\n    if (this.state.ascending) {\r\n      this.formatData();\r\n      return this.setState((state, props) => ({\r\n        filteredData: state.data\r\n          .slice(\r\n            this.formatData().indexOfFirstPage,\r\n            this.formatData().indexOfLastPost\r\n          )\r\n          .sort((a, b) => b.id - a.id),\r\n        ascending: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  onFilterHandler() {\r\n    this.setState({ isLoading: true });\r\n\r\n    const val = this.state.value && this.state.value.toLowerCase();\r\n\r\n    if (!this.state.value) return;\r\n\r\n    const filtered = this.state.data\r\n      .slice(\r\n        this.formatData().indexOfFirstPage,\r\n        this.formatData().indexOfLastPost\r\n      )\r\n      .filter((item) => {\r\n        if (!this.state.value || !item) {\r\n          return true;\r\n        }\r\n\r\n        if (\r\n          String(item.id).includes(val) ||\r\n          item.firstName.toLowerCase().includes(val) ||\r\n          item.lastName.toLowerCase().includes(val) ||\r\n          item.email.toLowerCase().includes(val) ||\r\n          item.phone.toLowerCase().includes(val)\r\n        )\r\n          return true;\r\n\r\n        return false;\r\n      });\r\n\r\n    this.setState(() => ({\r\n      filteredData: filtered,\r\n      isLoading: true,\r\n    }));\r\n  }\r\n\r\n  AddNewCell(newItem) {\r\n    const res = this.state.data && this.state.data.slice();\r\n\r\n    if (res[0].id == newItem.id) return;\r\n\r\n    res.unshift(newItem);\r\n\r\n    this.setState(\r\n      () => ({\r\n        data: res,\r\n      }),\r\n      () => {\r\n        this.formatData();\r\n      }\r\n    );\r\n  }\r\n\r\n  onChangeHandler(e) {\r\n    this.setState({ value: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bigdcom\">\r\n        <FilterForm\r\n          onChangeHandler={this.onChangeHandler.bind(this)}\r\n          onFilterHandler={this.onFilterHandler}\r\n          value={this.state.value}\r\n        />\r\n\r\n        {this.state.totalDataLength && (\r\n          <PaginationTable\r\n            per_page={this.state.perPage}\r\n            current_page={Number(this.state.currentPage)}\r\n            total_data={this.state.totalDataLength}\r\n            handleClick={this.handleClick}\r\n          />\r\n        )}\r\n        <Table\r\n          data={this.state.filteredData}\r\n          isLoading={this.state.isLoading}\r\n          onSortHandle={this.onSortHandle}\r\n          handleAddNewCell={this.AddNewCell}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BigDCOM;\r\n","import React, { Component, useCallback, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  getSmallData,\r\n  handleFiltered,\r\n  handleSort,\r\n  handleSortIcon,\r\n  SMALL_DATA_API,\r\n} from \"../../helpers/helpers\";\r\nimport \"./index.scss\";\r\nimport { FilterForm } from \"../FIlteration\";\r\nimport { Table } from \"../Table/Table\";\r\n\r\nclass SmallDCom extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n      value: \"\",\r\n      ascending: false,\r\n      filteredData: null,\r\n      isLoading: false,\r\n    };\r\n    this._isMounted = false;\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.onFilterHandler = this.onFilterHandler.bind(this);\r\n    this.onSortHandle = this.onSortHandle.bind(this);\r\n    this.AddNewCell = this.AddNewCell.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    const response = await getSmallData();\r\n    if (this._isMounted) {\r\n      this.setState((state, props) => ({\r\n        data: response.data,\r\n        filteredData: response.data,\r\n        isLoading: true,\r\n        totalDataLength: response.data.length,\r\n        isLoading: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  onSortHandle() {\r\n    if (!this.state.ascending) {\r\n      return this.setState((state, props) => ({\r\n        filteredData: handleSort(state.filteredData).ascending,\r\n        ascending: true,\r\n      }));\r\n    }\r\n    if (this.state.ascending) {\r\n      return this.setState((state, props) => ({\r\n        filteredData: handleSort(state.filteredData).descending,\r\n        ascending: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  onFilterHandler() {\r\n    this.setState({ isLoading: true });\r\n\r\n    const val = this.state.value && this.state.value.toLowerCase();\r\n\r\n    const filtered = this.state.data.filter((item) =>\r\n      handleFiltered(item, this.state.value)\r\n    );\r\n    this.setState((state, props) => ({\r\n      filteredData: filtered,\r\n      isLoading: false,\r\n    }));\r\n  }\r\n\r\n  AddNewCell(newItem) {\r\n    const res = this.state.data && this.state.data.slice();\r\n\r\n    if (res[0].id == newItem.id) return;\r\n\r\n    res.unshift(newItem);\r\n\r\n    this.setState((state, props) => ({\r\n      data: res,\r\n      filteredData: res,\r\n    }));\r\n  }\r\n\r\n  onChangeHandler(e) {\r\n    this.setState({ value: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bigdcom\">\r\n        <FilterForm\r\n          onChangeHandler={this.onChangeHandler}\r\n          onFilterHandler={this.onFilterHandler}\r\n          value={this.state.value}\r\n        />\r\n\r\n        <Table\r\n          data={this.state.filteredData}\r\n          isLoading={this.state.isLoading}\r\n          onSortHandle={this.onSortHandle}\r\n          handleAddNewCell={this.AddNewCell}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SmallDCom;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, HashRouter } from \"react-router-dom\";\nimport { Home } from \"./components/Home/Home\";\nimport BigDCOM from \"./components/main/BigDCOM\";\nimport SmallDCom from \"./components/main/SmallDCOM\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route component={SmallDCom} path=\"/small\" />\n          <Route component={BigDCOM} path=\"/big\" />\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}